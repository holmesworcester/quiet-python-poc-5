{
  "type": "group",
  "projector": {
    "description": "Projects group events",
    "func": "projector.project",
    "tests": [
      {
        "description": "Group created by valid user",
        "given": {
          "env": {
            "CRYPTO_MODE": "dummy"
          },
          "db": {
            "users": [
              {
                "id": "user_123",
                "pubkey": "user_123",
                "network_id": "net_123"
              }
            ]
          },
          "envelope": {
            "metadata": {},
            "payload": {
              "type": "group",
              "id": "group_123",
              "name": "Developers",
              "created_by": "user_123",
              "signature": "dummy_sig_Z3JvdXA6Z3JvdXBfMTIzOkRldmVsb3BlcnM6dXNlcl8xMjM=_by_user_123"
            }
          }
        },
        "then": {
          "db": {
            "groups": [
              {
                "id": "group_123",
                "name": "Developers",
                "created_by": "user_123"
              }
            ]
          }
        }
      },
      {
        "description": "Group blocked when creator doesn't exist",
        "given": {
          "db": {},
          "envelope": {
            "metadata": {},
            "payload": {
              "type": "group",
              "id": "group_456",
              "name": "Invalid Group",
              "created_by": "unknown_user",
              "signature": "dummy_sig_Z3JvdXA6Z3JvdXBfNDU2OkludmFsaWQgR3JvdXA6dW5rbm93bl91c2Vy_by_unknown_user"
            }
          },
          "env": {
            "CRYPTO_MODE": "dummy"
          }
        },
        "then": {
          "db": {
            "groups": []
          }
        }
      },
      {
        "description": "Group blocked when created_by doesn't match signer",
        "given": {
          "db": {
            "users": [
              {
                "id": "user_123",
                "pubkey": "creator_pub",
                "network_id": "net_123"
              },
              {
                "id": "user_456",
                "pubkey": "other_pub",
                "network_id": "net_123"
              }
            ]
          },
          "envelope": {
            "metadata": {},
            "payload": {
              "type": "group",
              "id": "group_789",
              "name": "Mismatched Group",
              "created_by": "user_123",
              "signature": "dummy_sig_Z3JvdXA6Z3JvdXBfNzg5Ok1pc21hdGNoZWQgR3JvdXA6dXNlcl8xMjM=_by_other_pub"
            }
          },
          "env": {
            "CRYPTO_MODE": "dummy"
          }
        },
        "then": {
          "db": {
            "groups": []
          }
        }
      },
      {
        "description": "Idempotency - duplicate group doesn't create duplicate state",
        "given": {
          "db": {
            "users": [
              {
                "id": "user_123",
                "pubkey": "user_pub",
                "network_id": "net_123"
              }
            ],
            "groups": [
              {
                "id": "group_123",
                "name": "Developers",
                "created_by": "user_123",
                "created_at_ms": 0
              }
            ],
            "event_store": [
              {
                "event_type": "group",
                "data": {
                  "type": "group",
                  "id": "group_123",
                  "name": "Developers",
                  "created_by": "user_123",
                  "signature": "dummy_sig_Z3JvdXA6Z3JvdXBfMTIzOkRldmVsb3BlcnM6dXNlcl8xMjM=_by_creator_pub"
                },
                "metadata": {}
              }
            ]
          },
          "envelope": {
            "metadata": {},
            "payload": {
              "type": "group",
              "id": "group_123",
              "name": "Developers",
              "created_by": "user_123",
              "signature": "dummy_sig_Z3JvdXA6Z3JvdXBfMTIzOkRldmVsb3BlcnM6dXNlcl8xMjM=_by_creator_pub"
            }
          },
          "env": {
            "CRYPTO_MODE": "dummy"
          }
        },
        "then": {
          "db": {
            "groups": [
              {
                "id": "group_123",
                "name": "Developers",
                "created_by": "user_123"
              }
            ]
          }
        }
      },
      {
        "description": "Second group doesn't change first_group_id",
        "given": {
          "db": {
            "users": [
              {
                "id": "user_123",
                "pubkey": "creator_pub",
                "network_id": "net_123"
              }
            ],
            "groups": [
              {
                "id": "group_first",
                "name": "First Group",
                "created_by": "user_123"
              }
            ],
            "first_group_id": "group_first"
          },
          "envelope": {
            "metadata": {},
            "payload": {
              "type": "group",
              "id": "group_second",
              "name": "Second Group",
              "created_by": "user_123",
              "signature": "dummy_sig_Z3JvdXA6Z3JvdXBfc2Vjb25kOlNlY29uZCBHcm91cDp1c2VyXzEyMw==_by_creator_pub"
            }
          },
          "env": {
            "CRYPTO_MODE": "dummy"
          }
        },
        "then": {
          "db": {
            "groups": [
              {
                "id": "group_first",
                "name": "First Group",
                "created_by": "user_123"
              },
              {
                "id": "group_second",
                "name": "Second Group",
                "created_by": "user_123"
              }
            ]
          }
        }
      },
      {
        "description": "Auto-unblocks add events waiting for this group",
        "given": {
          "env": {
            "CRYPTO_MODE": "dummy"
          },
          "db": {
            "users": [
              {
                "id": "user_123",
                "pubkey": "user_123",
                "network_id": "net_123"
              },
              {
                "id": "user_789",
                "pubkey": "user_789",
                "network_id": "net_123"
              },
              {
                "id": "user_creator",
                "pubkey": "user_creator",
                "network_id": "net_123"
              }
            ],
            "blocked": [
              {
                "event_id": "add_123",
                "blocked_by_id": "group_456",
                "event_type": "add",
                "data": {
                  "type": "add",
                  "id": "add_123",
                  "group_id": "group_456",
                  "user_id": "user_123",
                  "added_by": "user_creator",
                  "signature": "dummy_sig_YWRkOmFkZF8xMjM6Z3JvdXBfNDU2OnVzZXJfMTIzOnVzZXJfY3JlYXRvcg==_by_user_creator"
                },
                "metadata": {},
                "reason": "Group group_456 not found",
                "created_at_ms": 900
              }
            ]
          },
          "envelope": {
            "metadata": {},
            "payload": {
              "type": "group",
              "id": "group_456",
              "name": "New Group",
              "created_by": "user_123",
              "signature": "dummy_sig_Z3JvdXA6Z3JvdXBfNDU2Ok5ldyBHcm91cDp1c2VyXzEyMw==_by_user_123"
            }
          }
        },
        "ticks": 2,
        "then": {
          "db": {
            "groups": [
              {
                "id": "group_456"
              }
            ],
            "adds": [
              {
                "id": "add_123"
              }
            ]
          }
        }
      },
      {
        "description": "Auto-unblocks channel events waiting for this group",
        "given": {
          "env": {
            "CRYPTO_MODE": "dummy"
          },
          "db": {
            "users": [
              {
                "id": "user_123",
                "pubkey": "user_123",
                "network_id": "net_123"
              }
            ],
            "blocked": [
              {
                "event_id": "channel_789",
                "blocked_by_id": "group_new",
                "event_type": "channel",
                "data": {
                  "type": "channel",
                  "id": "channel_789",
                  "name": "Test Channel",
                  "network_id": "net_123",
                  "group_id": "group_new",
                  "created_by": "user_123",
                  "signature": "dummy_sig_Y2hhbm5lbDpjaGFubmVsXzc4OTpUZXN0IENoYW5uZWw6bmV0XzEyMzp1c2VyXzEyMzpncm91cF9uZXc=_by_user_123"
                },
                "metadata": {},
                "reason": "Group group_new not found",
                "created_at_ms": 900
              }
            ]
          },
          "envelope": {
            "metadata": {},
            "payload": {
              "type": "group",
              "id": "group_new",
              "name": "New Group",
              "created_by": "user_123",
              "signature": "dummy_sig_Z3JvdXA6Z3JvdXBfbmV3Ok5ldyBHcm91cDp1c2VyXzEyMw==_by_user_123"
            }
          }
        },
        "ticks": 2,
        "then": {
          "db": {
            "groups": [
              {
                "id": "group_new"
              }
            ],
            "channels": [
              {
                "id": "channel_789"
              }
            ]
          }
        }
      }
    ]
  },
  "commands": {
    "create": {
      "description": "Creates a new group",
      "func": "create.execute",
      "tests": [
        {
          "given": {
            "db": {
              "identities": [
                {
                  "pubkey": "creator_pub",
                  "privkey": "creator_priv",
                  "name": "Alice"
                }
              ],
              "users": [
                {
                  "id": "user_123",
                  "pubkey": "creator_pub",
                  "network_id": "net_123",
                  "name": "Alice"
                }
              ]
            },
            "params": {
              "name": "Developers",
              "user_id": "user_123"
            },
            "env": {
              "CRYPTO_MODE": "dummy"
            }
          },
          "then": {
            "return": {
              "api_response": {
                "groupId": "*",
                "name": "Developers"
              },
              "newEvents": [
                {
                  "type": "group",
                  "id": "*",
                  "name": "Developers",
                  "created_by": "user_123",
                  "signature": "dummy_sig_Z3JvdXA6KjpEZXZlbG9wZXJzOnVzZXJfMTIz_by_creator_pub"
                },
                {
                  "type": "add",
                  "id": "*",
                  "user_id": "user_123",
                  "group_id": "*",
                  "added_by": "user_123",
                  "signature": "dummy_sig_YWRkOio6Kjp1c2VyXzEyMzp1c2VyXzEyMw==_by_creator_pub"
                }
              ]
            }
          }
        },
        {
          "description": "Fails when user doesn't exist",
          "given": {
            "db": {},
            "params": {
              "name": "Invalid Group",
              "user_id": "unknown_user"
            }
          },
          "then": {
            "error": "User unknown_user not found"
          }
        }
      ]
    },
    "list": {
      "description": "List groups",
      "func": "list.execute",
      "tests": [
        {
          "description": "List all groups",
          "given": {
            "db": {
              "groups": [
                {
                  "id": "group1",
                  "name": "Group 1",
                  "created_by": "user1",
                  "created_at_ms": 1000
                },
                {
                  "id": "group2",
                  "name": "Group 2",
                  "created_by": "user2",
                  "created_at_ms": 2000
                }
              ]
            },
            "params": {}
          },
          "then": {
            "return": {
              "api_response": {
                "groups": [
                  {
                    "id": "group1",
                    "name": "Group 1",
                    "created_by": "user1",
                    "created_at_ms": 1000
                  },
                  {
                    "id": "group2",
                    "name": "Group 2",
                    "created_by": "user2",
                    "created_at_ms": 2000
                  }
                ]
              }
            }
          }
        },
        {
          "description": "Empty list when no groups",
          "given": {
            "db": {},
            "params": {}
          },
          "then": {
            "return": {
              "api_response": {
                "groups": []
              }
            }
          }
        }
      ]
    }
  }
}
